{
  // 自定义常用结构的代码联想
  // ==============================================================================================
  "self_hearder": {
    "prefix": "sheader",
    "body": [
      "#!/usr/bin/env python3",
      "# -*- encoding: utf-8 -*-",
      "'''",
      "@file : $TM_FILENAME",
      "@desc : 脚本运行方式 [python3 $TM_FILENAME]",
      "        脚本说明:$0",
      "@date : $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      "@auth : danao",
      "@version : 1.0",
      "'''",
      ""
    ]
  },
  "self_main": {
    "prefix": "smain",
    "body": [
      "def main():",
      "\tprint(\"hello world!\")",
      "",
      "if __name__ == \"__main__\":",
      "\tmain()"
    ],
    "description": "创建一个[main]函数"
  },
  "self_array": {
    "prefix": "sarr",
    "body": ["arr = [$1]"],
    "description": "创建一个[数组]结构"
  },
  "self_list": {
    "prefix": "slist",
    "body": ["list = [$1]"],
    "description": "创建一个[list]结构"
  },
  "self_set": {
    "prefix": "sset",
    "body": ["set = set()", "set.add($1)"],
    "description": "创建一个[set]结构"
  },
  "self_map": {
    "prefix": "smap",
    "body": ["map = {'key':'value',$1:$2}"],
    "description": "创建一个[map]结构"
  },
  "self_date": {
    "prefix": "snow",
    "body": ["datetime.datetime.now(None).strftime('%Y-%m-%d %H:%M:%S')"],
    "description": "创建一个[date]对象"
  },
  "self_log": {
    "prefix": "slog",
    "body": ["logging.info(\"$1=[%s]\" % ($2))"],
    "description": "创建一个日志"
  },
  "self_print": {
    "prefix": "sprint",
    "body": ["print(\"$1=[%s]\" % ($2))"],
    "description": "创建一个打印输出"
  },
  "self_object": {
    "prefix": "sobject",
    "body": [""],
    "description": "创建一个[object]结构"
  },
  "self_tojson": {
    "prefix": "tojson",
    "body": ["json.dumps($1, ensure_ascii=False, default=str, indent=2)"],
    "description": "obj 转 json ensure_ascii 中文编码问题 default 时间格式编码异常问题 indent 格式化输出 json"
  },
  "self_toobj": {
    "prefix": "toobj",
    "body": ["json.loads($1)"],
    "description": "json 转 obj"
  },
  // 单语言配置
  // ==============================================================================================
  "self_create_logging": {
    "prefix": "clog",
    "body": [
      "import logging",
      "",
      "logfile = 'debug.log'",
      "LOG_FORMAT = \"%(asctime)s [%(pathname)s:%(lineno)d] %(levelname)s : %(message)s\"",
      "DATE_FORMAT = \"%Y-%m-%d %H:%M:%S\"",
      "fp = logging.FileHandler(filename=logfile, encoding='utf-8')",
      "fs = logging.StreamHandler()",
      "logging.basicConfig(level=logging.DEBUG, format=LOG_FORMAT,",
      "                    datefmt=DATE_FORMAT, handlers=[fp, fs])"
    ],
    "description": "创建一个 logging 对象"
  },
  "打印信息": {
    "prefix": "log",
    "body": ["print(\"log is %s\"%($1))"],
    "description": "Log output to console"
  },
  "主函数": {
    "prefix": "cmain",
    "body": [
      "import datetime",
      "",
      "# 全局字典 单个key list set 和 map",
      "key = 'key'",
      "list = []",
      "set = set()",
      "context = dict()",
      "",
      "",
      "def getNow():",
      "    \"\"\"",
      "    获取当前格式化时间",
      "    \"\"\"",
      "    return datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')",
      "",
      "",
      "def run():",
      "    print(\"task start\")",
      "",
      "",
      "if __name__ == '__main__':",
      "    context['start script'] = getNow()",
      "    run()",
      "    context['end script'] = getNow()",
      "    print(context)"
    ],
    "description": "create main"
  },
  "读文件": {
    "prefix": "readFile",
    "body": [
      "fileName = $0",
      "with open(fileName, 'r', encoding='utf-8') as f:",
      "    lines = f.readlines()",
      "    for line in lines:",
      "        print(line)"
    ],
    "description": "read file"
  },

  "写文件": {
    "prefix": "exportFile",
    "body": "with open('debug.log', 'a') as debug:\n    debug.write($0 + \"\\n\")",
    "description": "脚本内容写入文件中"
  }
  // ==============================================================================================
}
